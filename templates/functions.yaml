{{/* Create Mongodb connection URL */}}
{{- define "mongodb.connectionString" -}}
{{- $username := .Values.auth.dbUser -}}
{{- $password := .Values.auth.dbPassword -}}
{{- $database := .Values.auth.database | default "test" -}}
{{- $authSource := "admin" -}}
{{- $port := .Values.auth.port | default "27017" -}}
{{- $hosts := list -}}
{{- range $i := until (int .Values.replicaCount) -}}
{{- $hosts = append $hosts (printf "%s-mongodb-%d.%s-headless.%s.svc.cluster.local:%s" $.Release.Name $i $.Values.name $.Release.Namespace $port) -}}
{{- end -}}
{{- $hostList := join "," $hosts -}}
{{- $queryParams := list -}}
{{- if .Values.replicaSet -}}
{{- $queryParams = append $queryParams (printf "replicaSet=%s" $.Values.replicaSet) -}}
{{- end -}}
{{- $queryParams = append $queryParams (printf "authSource=%s" $authSource) -}}
{{- $queryString := join "&" $queryParams -}}
{{- printf "mongodb://%s:%s@%s/%s?%s" $username $password $hostList $database $queryString -}}
{{- end -}}
{{- define "mongodb.labels" -}}
app: mongodb
helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
app.kubernetes.io/component: mongodb
app.kubernetes.io/instance: {{ .Release.Name | quote }}
app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
{{- with .Values.extraLabels }}
{{- toYaml . | nindent 0 }}
{{- end }}
{{- end -}}